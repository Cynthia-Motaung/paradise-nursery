{"version":3,"file":"static/js/839.32472002.chunk.js","mappings":"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","sources":["webpack://paradise-nursery/./src/components/cart/CartItem/CartItem.module.css?27ab","components/cart/CartItem/CartItem.js","webpack://paradise-nursery/./src/components/cart/CartSummary/CartSummary.module.css?708c","components/cart/CartSummary/CartSummary.js","webpack://paradise-nursery/./src/components/cart/EmptyCart/EmptyCart.module.css?b7b4","components/cart/EmptyCart/EmptyCart.js","webpack://paradise-nursery/./src/pages/Cart/Cart.module.css?8a2b","pages/Cart/Cart.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cartItem\":\"CartItem_cartItem__-0Ttt\",\"imageContainer\":\"CartItem_imageContainer__DTpr3\",\"image\":\"CartItem_image__Haf4f\",\"details\":\"CartItem_details__PD23l\",\"header\":\"CartItem_header__PE6Ai\",\"name\":\"CartItem_name__hx3C5\",\"removeButton\":\"CartItem_removeButton__2sd3P\",\"price\":\"CartItem_price__2C9dP\",\"controls\":\"CartItem_controls__Ih5mh\",\"quantityControls\":\"CartItem_quantityControls__Hxsyj\",\"quantityButton\":\"CartItem_quantityButton__UKeFs\",\"quantity\":\"CartItem_quantity__qLFX4\",\"total\":\"CartItem_total__ntEMK\"};","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useCart } from '../../../context/CartContext';\r\nimport { formatPrice } from '../../../utils/helpers';\r\nimport styles from './CartItem.module.css';\r\n\r\nconst CartItem = memo(({ item }) => {\r\n  const { updateQuantity, removeFromCart } = useCart();\r\n\r\n  const handleQuantityChange = (newQuantity) => {\r\n    if (newQuantity < 1) return;\r\n    updateQuantity(item.id, newQuantity);\r\n  };\r\n\r\n  const handleIncrement = () => {\r\n    handleQuantityChange(item.quantity + 1);\r\n  };\r\n\r\n  const handleDecrement = () => {\r\n    if (item.quantity > 1) {\r\n      handleQuantityChange(item.quantity - 1);\r\n    } else {\r\n      removeFromCart(item.id);\r\n    }\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    removeFromCart(item.id);\r\n  };\r\n\r\n  const totalPrice = item.price * item.quantity;\r\n\r\n  return (\r\n    <div className={styles.cartItem} data-testid={`cart-item-${item.id}`}>\r\n      <div className={styles.imageContainer}>\r\n        <img\r\n          src={item.image}\r\n          alt={item.name}\r\n          className={styles.image}\r\n          loading=\"lazy\"\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.details}>\r\n        <div className={styles.header}>\r\n          <h3 className={styles.name}>{item.name}</h3>\r\n          <button\r\n            className={styles.removeButton}\r\n            onClick={handleRemove}\r\n            aria-label={`Remove ${item.name} from cart`}\r\n          >\r\n            <i className=\"fas fa-times\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        <div className={styles.price}>\r\n          {formatPrice(item.price)} each\r\n        </div>\r\n\r\n        <div className={styles.controls}>\r\n          <div className={styles.quantityControls}>\r\n            <button\r\n              className={styles.quantityButton}\r\n              onClick={handleDecrement}\r\n              aria-label={`Decrease quantity of ${item.name}`}\r\n            >\r\n              <i className=\"fas fa-minus\" aria-hidden=\"true\"></i>\r\n            </button>\r\n            \r\n            <span className={styles.quantity} aria-live=\"polite\">\r\n              {item.quantity}\r\n            </span>\r\n            \r\n            <button\r\n              className={styles.quantityButton}\r\n              onClick={handleIncrement}\r\n              aria-label={`Increase quantity of ${item.name}`}\r\n            >\r\n              <i className=\"fas fa-plus\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n\r\n          <div className={styles.total}>\r\n            Total: <strong>{formatPrice(totalPrice)}</strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nCartItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    image: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default CartItem;","// extracted by mini-css-extract-plugin\nexport default {\"summary\":\"CartSummary_summary__Tdx7M\",\"title\":\"CartSummary_title__bdnEf\",\"details\":\"CartSummary_details__ux+Ah\",\"row\":\"CartSummary_row__XsgUY\",\"total\":\"CartSummary_total__Zqm-v\",\"freeShipping\":\"CartSummary_freeShipping__YFIid\",\"shippingMessage\":\"CartSummary_shippingMessage__vxz49\",\"freeShippingMessage\":\"CartSummary_freeShippingMessage__eKnFN\",\"divider\":\"CartSummary_divider__YHB+7\",\"actions\":\"CartSummary_actions__NSysH\",\"emptyMessage\":\"CartSummary_emptyMessage__l7hNd\"};","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice, calculateShipping } from '../../../utils/helpers';\r\nimport styles from './CartSummary.module.css';\r\n\r\nconst CartSummary = ({ \r\n  itemsCount, \r\n  subtotal, \r\n  onContinueShopping, \r\n  onCheckout,\r\n  checkoutLoading = false \r\n}) => {\r\n  const shipping = calculateShipping(subtotal, itemsCount);\r\n  const total = subtotal + shipping;\r\n  const freeShippingThreshold = 50;\r\n  const remainingForFreeShipping = freeShippingThreshold - subtotal;\r\n\r\n  return (\r\n    <div className={styles.summary}>\r\n      <h2 className={styles.title}>Order Summary</h2>\r\n      \r\n      <div className={styles.details}>\r\n        <div className={styles.row}>\r\n          <span>Items ({itemsCount})</span>\r\n          <span>{formatPrice(subtotal)}</span>\r\n        </div>\r\n        \r\n        <div className={styles.row}>\r\n          <span>Shipping</span>\r\n          <span>\r\n            {shipping === 0 ? (\r\n              <span className={styles.freeShipping}>FREE</span>\r\n            ) : (\r\n              formatPrice(shipping)\r\n            )}\r\n          </span>\r\n        </div>\r\n        \r\n        {shipping > 0 && remainingForFreeShipping > 0 && (\r\n          <div className={styles.shippingMessage}>\r\n            <i className=\"fas fa-truck\" aria-hidden=\"true\"></i>\r\n            Add {formatPrice(remainingForFreeShipping)} more for free shipping!\r\n          </div>\r\n        )}\r\n        \r\n        {shipping === 0 && (\r\n          <div className={styles.freeShippingMessage}>\r\n            <i className=\"fas fa-check-circle\" aria-hidden=\"true\"></i>\r\n            You've got free shipping!\r\n          </div>\r\n        )}\r\n        \r\n        <hr className={styles.divider} />\r\n        \r\n        <div className={`${styles.row} ${styles.total}`}>\r\n          <span>Total</span>\r\n          <span>{formatPrice(total)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.actions}>\r\n        <button\r\n          className=\"btn btn--secondary\"\r\n          onClick={onContinueShopping}\r\n          disabled={checkoutLoading}\r\n        >\r\n          Continue Shopping\r\n        </button>\r\n        <button\r\n          className=\"btn\"\r\n          onClick={onCheckout}\r\n          disabled={itemsCount === 0 || checkoutLoading}\r\n        >\r\n          {checkoutLoading ? (\r\n            <>\r\n              <i className=\"fas fa-spinner fa-spin\" aria-hidden=\"true\"></i>\r\n              Processing...\r\n            </>\r\n          ) : (\r\n            'Proceed to Checkout'\r\n          )}\r\n        </button>\r\n      </div>\r\n\r\n      {itemsCount === 0 && (\r\n        <p className={styles.emptyMessage}>\r\n          Your cart is empty. Add some plants to see your order summary.\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCartSummary.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  subtotal: PropTypes.number.isRequired,\r\n  onContinueShopping: PropTypes.func.isRequired,\r\n  onCheckout: PropTypes.func.isRequired,\r\n  checkoutLoading: PropTypes.bool\r\n};\r\n\r\nexport default CartSummary;","// extracted by mini-css-extract-plugin\nexport default {\"emptyCart\":\"EmptyCart_emptyCart__loj0q\",\"content\":\"EmptyCart_content__90311\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './EmptyCart.module.css';\r\n\r\nconst EmptyCart = ({ onBrowsePlants }) => {\r\n  return (\r\n    <div className={styles.emptyCart} role=\"status\" aria-label=\"Shopping cart is empty\">\r\n      <div className={styles.content}>\r\n        <i className=\"fas fa-shopping-cart\" aria-hidden=\"true\"></i>\r\n        <h2>Your cart is empty</h2>\r\n        <p>Looks like you haven't added any plants to your cart yet.</p>\r\n        <button className=\"btn\" onClick={onBrowsePlants}>\r\n          Browse Our Plants\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nEmptyCart.propTypes = {\r\n  onBrowsePlants: PropTypes.func.isRequired\r\n};\r\n\r\nexport default EmptyCart;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cart_container__7rLML\",\"pageTitle\":\"Cart_pageTitle__qRDIt\",\"cartLayout\":\"Cart_cartLayout__B8u7r\",\"cartItems\":\"Cart_cartItems__aHEya\",\"emptyState\":\"Cart_emptyState__AgVu+\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useCart } from '../../context/CartContext';\r\nimport CartItem from '../../components/cart/CartItem/CartItem';\r\nimport CartSummary from '../../components/cart/CartSummary/CartSummary';\r\nimport EmptyCart from '../../components/cart/EmptyCart/EmptyCart';\r\nimport styles from './Cart.module.css';\r\n\r\nconst Cart = ({ onNavigate }) => {\r\n  const { cart, getCartTotal, getCartItemsCount, clearCart } = useCart();\r\n  const [checkoutLoading, setCheckoutLoading] = useState(false);\r\n\r\n  const handleCheckout = async () => {\r\n    if (cart.items.length === 0) {\r\n      alert('Your cart is empty. Add some plants before checking out!');\r\n      return;\r\n    }\r\n    \r\n    setCheckoutLoading(true);\r\n    \r\n    // Simulate checkout process\r\n    try {\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      alert('Thank you for your order! Your plants will be delivered soon.');\r\n      clearCart();\r\n      onNavigate('products');\r\n    } catch (error) {\r\n      console.error('Checkout error:', error);\r\n      alert('There was a problem with your order. Please try again.');\r\n    } finally {\r\n      setCheckoutLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleContinueShopping = () => {\r\n    onNavigate('products');\r\n  };\r\n\r\n  const handleBrowsePlants = () => {\r\n    onNavigate('products');\r\n  };\r\n\r\n  if (cart.items.length === 0) {\r\n    return (\r\n      <section className={styles.container}>\r\n        <div className=\"container\">\r\n          <h1 className={styles.pageTitle}>Your Shopping Cart</h1>\r\n          <div className={styles.emptyState}>\r\n            <EmptyCart onBrowsePlants={handleBrowsePlants} />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className=\"container\">\r\n        <h1 className={styles.pageTitle}>Your Shopping Cart</h1>\r\n        \r\n        <div className={styles.cartLayout}>\r\n          <div className={styles.cartItems}>\r\n            {cart.items.map(item => (\r\n              <CartItem key={item.id} item={item} />\r\n            ))}\r\n          </div>\r\n          \r\n          <CartSummary\r\n            itemsCount={getCartItemsCount()}\r\n            subtotal={getCartTotal()}\r\n            onContinueShopping={handleContinueShopping}\r\n            onCheckout={handleCheckout}\r\n            checkoutLoading={checkoutLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  onNavigate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Cart;"],"names":["memo","_ref","item","updateQuantity","removeFromCart","useCart","handleQuantityChange","newQuantity","id","totalPrice","price","quantity","_jsxs","className","styles","concat","children","_jsx","src","image","alt","name","loading","onClick","handleRemove","formatPrice","handleDecrement","handleIncrement","itemsCount","subtotal","onContinueShopping","onCheckout","checkoutLoading","shipping","calculateShipping","total","remainingForFreeShipping","disabled","_Fragment","onBrowsePlants","role","onNavigate","cart","getCartTotal","getCartItemsCount","clearCart","setCheckoutLoading","useState","handleBrowsePlants","items","length","EmptyCart","map","CartItem","CartSummary","handleContinueShopping","async","Promise","resolve","setTimeout","alert","error","console"],"sourceRoot":""}