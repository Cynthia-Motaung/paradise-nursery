{"version":3,"file":"static/js/486.89c707bd.chunk.js","mappings":"qLACA,QAA4B,2BAA5B,EAA0E,kCAA1E,EAA4H,+BAA5H,EAAqK,yBAArK,EAA2M,4BAA3M,EAAqP,6BAArP,EAA2R,wBAA3R,EAAoU,gCAApU,EAAmX,8BAAnX,EAA+Z,6BAA/Z,EAAyc,4BAAzc,EAAshB,+BAAthB,EAAqkB,+BAArkB,EAAknB,6BAAlnB,EAA2pB,2BAA3pB,EAAksB,2BAAlsB,EAAyuB,2BAAzuB,EAAkxB,6BAAlxB,EAA6zB,6BAA7zB,EAAq2B,0BAAr2B,EAAg5B,gCAAh5B,EAAk8B,iCAAl8B,EAAg/B,4B,aCKh/B,MA4QA,EA5QgBA,IAAqB,IAApB,WAAEC,GAAYD,EAC7B,MAAM,KAAEE,EAAI,YAAEC,EAAW,gBAAEC,EAAe,cAAEC,EAAa,kBAAEC,EAAiB,OAAEC,IAAWC,EAAAA,EAAAA,MAClFC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,YACpCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,CACvCK,MAAiB,OAAXb,QAAW,IAAXA,OAAW,EAAXA,EAAaa,OAAQ,GAC3BC,OAAkB,OAAXd,QAAW,IAAXA,OAAW,EAAXA,EAAac,QAAS,GAC7BC,OAAkB,OAAXf,QAAW,IAAXA,OAAW,EAAXA,EAAae,QAAS,GAC7BC,SAAoB,OAAXhB,QAAW,IAAXA,OAAW,EAAXA,EAAagB,UAAW,KAGnC,IAAKjB,EACH,OACEkB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWE,UACxBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAwBC,SAAA,EACtCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAoB,cAAY,UAC7CD,EAAAA,EAAAA,KAAA,MAAAG,SAAI,wCACJH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,kEACHH,EAAAA,EAAAA,KAAA,UAAQC,UAAU,MAAMI,QAASA,IAAMxB,EAAW,YAAYsB,SAAC,6BASzE,MAAMG,EAAqBC,IACzB,MAAM,KAAEX,EAAI,MAAEY,EAAK,KAAEC,EAAI,QAAEC,GAAYH,EAAEI,OACzChB,EAAYiB,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP,CAAChB,GAAgB,aAATa,EAAsBC,EAAUF,MAItCM,EAAoBC,UACxBR,EAAES,uBACI/B,EAAcS,GACpBD,GAAa,IAGTwB,EAAyBA,CAACC,EAAKV,KACnCtB,EAAkB,CAAE,CAACgC,GAAMV,KAyL7B,OACER,EAAAA,EAAAA,KAAA,WAASC,UAAWC,EAAiBC,UACnCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWE,UACxBC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAqBC,SAAA,EACnCH,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAeC,UAC/BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,CA3L/B,CACX,CAAEgB,GAAI,UAAWC,MAAO,UAAWC,KAAM,eACzC,CAAEF,GAAI,SAAUC,MAAO,gBAAiBC,KAAM,kBAC9C,CAAEF,GAAI,YAAaC,MAAO,kBAAmBC,KAAM,yBACnD,CAAEF,GAAI,WAAYC,MAAO,WAAYC,KAAM,gBAC3C,CAAEF,GAAI,cAAeC,MAAO,cAAeC,KAAM,eAuLjCC,IAAIC,IACRnB,EAAAA,EAAAA,MAAA,UAEEH,UAAS,GAAAuB,OAAKtB,EAAkB,KAAAsB,OAAInC,IAAckC,EAAIJ,GAAKjB,EAAgB,IAC3EG,QAASA,IAAMf,EAAaiC,EAAIJ,IAAIhB,SAAA,EAEpCH,EAAAA,EAAAA,KAAA,KAAGC,UAAWsB,EAAIF,KAAM,cAAY,SACnCE,EAAIH,QALAG,EAAIJ,MAQbnB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,KACfE,EAAAA,EAAAA,MAAA,UACEH,UAAS,GAAAuB,OAAKtB,EAAkB,KAAAsB,OAAItB,GACpCG,QAASlB,EAAOgB,SAAA,EAEhBH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sBAAsB,cAAY,SAAW,kBAMhED,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAmBC,SAzMnBsB,MACvB,OAAQpC,GACN,IAAK,UACH,OACEe,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAqBC,SAAA,EACnCH,EAAAA,EAAAA,KAAA,OACE0B,IAAK5C,EAAK6C,SAAW,6BACrBC,IAAK9C,EAAKc,KACVK,UAAWC,KAEbE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEH,EAAAA,EAAAA,KAAA,MAAAG,SAAKrB,EAAKc,QACVQ,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,gBAAc,IAAI0B,KAAgB,OAAX9C,QAAW,IAAXA,OAAW,EAAXA,EAAa+C,WAAWC,4BAElDvC,IACAQ,EAAAA,EAAAA,KAAA,UACEC,UAAU,qBACVI,QAASA,IAAMZ,GAAa,GAAMU,SACnC,oBAMJX,GACCY,EAAAA,EAAAA,MAAA,QAAM4B,SAAUlB,EAAmBb,UAAWC,EAAmBC,SAAA,EAC/DC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,OAAOhC,UAAWC,EAAiBC,SAAC,eAGnDH,EAAAA,EAAAA,KAAA,SACES,KAAK,OACLU,GAAG,OACHvB,KAAK,OACLY,MAAOd,EAASE,KAChBsC,SAAU5B,EACVL,UAAWC,QAIfE,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,QAAQhC,UAAWC,EAAiBC,SAAC,mBAGpDH,EAAAA,EAAAA,KAAA,SACES,KAAK,QACLU,GAAG,QACHvB,KAAK,QACLY,MAAOd,EAASG,MAChBqC,SAAU5B,EACVL,UAAWC,QAIfE,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,SAAOiC,QAAQ,QAAQhC,UAAWC,EAAiBC,SAAC,kBAGpDH,EAAAA,EAAAA,KAAA,SACES,KAAK,MACLU,GAAG,QACHvB,KAAK,QACLY,MAAOd,EAASI,MAChBoC,SAAU5B,EACVL,UAAWC,QAIfE,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAmBC,SAAA,EACjCH,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASR,UAAU,MAAKE,SAAC,kBAGtCH,EAAAA,EAAAA,KAAA,UACES,KAAK,SACLR,UAAU,qBACVI,QAASA,IAAMZ,GAAa,GAAOU,SACpC,kBAMLC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,WAAe,IAAErB,EAAKe,UAEhCO,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,WAAe,KAAa,OAAXpB,QAAW,IAAXA,OAAW,EAAXA,EAAae,QAAS,wBAO3D,IAAK,cACH,OACEM,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,8BACJH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAsBC,UACpCC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAuBC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,SACES,KAAK,WACLC,QAAS1B,EAAgBmD,WACzBD,SAAW3B,GAAMU,EAAuB,aAAcV,EAAEI,OAAOD,YAEjEV,EAAAA,EAAAA,KAAA,QAAAG,SAAM,iDAGVH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAsBC,UACpCC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAuBC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,SACES,KAAK,WACLC,QAAS1B,EAAgBoD,cACzBF,SAAW3B,GAAMU,EAAuB,gBAAiBV,EAAEI,OAAOD,YAEpEV,EAAAA,EAAAA,KAAA,QAAAG,SAAM,6CAMhB,IAAK,SACH,OACEC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,mBACJC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sBAAsB,cAAY,UAC/CD,EAAAA,EAAAA,KAAA,KAAAG,SAAG,mBACHH,EAAAA,EAAAA,KAAA,UACEC,UAAU,MACVI,QAASA,IAAMxB,EAAW,YAAYsB,SACvC,yBAOT,IAAK,YACH,OACEC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,qBACJC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAwB,cAAY,UACjDD,EAAAA,EAAAA,KAAA,KAAAG,SAAG,wBACHH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,4CAKX,IAAK,WACH,OACEC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,mBACJC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAkBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAe,cAAY,UACxCD,EAAAA,EAAAA,KAAA,KAAAG,SAAG,4BACHH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,yCACHH,EAAAA,EAAAA,KAAA,UACEC,UAAU,MACVI,QAASA,IAAMxB,EAAW,YAAYsB,SACvC,wBAOT,QACE,OAAO,OAgCFsB,Y","sources":["webpack://paradise-nursery/./src/pages/Profile/Profile.module.css?aa45","pages/Profile/Profile.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Profile_container__6qDyG\",\"notAuthenticated\":\"Profile_notAuthenticated__zG6m8\",\"profileLayout\":\"Profile_profileLayout__a9vU5\",\"sidebar\":\"Profile_sidebar__aVJfE\",\"sidebarNav\":\"Profile_sidebarNav__5vJpd\",\"sidebarItem\":\"Profile_sidebarItem__Owwhs\",\"active\":\"Profile_active__CKFjA\",\"sidebarDivider\":\"Profile_sidebarDivider__5PqVk\",\"logoutButton\":\"Profile_logoutButton__N+pDU\",\"mainContent\":\"Profile_mainContent__4gq52\",\"tabContent\":\"Profile_tabContent__LXpdq\",\"fadeIn\":\"Profile_fadeIn__hV821\",\"profileHeader\":\"Profile_profileHeader__L0gxZ\",\"profileAvatar\":\"Profile_profileAvatar__zI3oK\",\"profileForm\":\"Profile_profileForm__RHJvr\",\"formGroup\":\"Profile_formGroup__Tg-m-\",\"formLabel\":\"Profile_formLabel__0ERQP\",\"formInput\":\"Profile_formInput__sy+wg\",\"formActions\":\"Profile_formActions__Pu6Ru\",\"profileInfo\":\"Profile_profileInfo__R+Wq-\",\"infoItem\":\"Profile_infoItem__cWbHJ\",\"preferenceItem\":\"Profile_preferenceItem__VXF2i\",\"preferenceLabel\":\"Profile_preferenceLabel__Rf4Pq\",\"emptyState\":\"Profile_emptyState__TvxRh\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport LoadingSpinner from '../../components/common/LoadingSpinner/LoadingSpinner';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ onNavigate }) => {\r\n  const { user, userProfile, userPreferences, updateProfile, updatePreferences, logout } = useAuth();\r\n  const [activeTab, setActiveTab] = useState('profile');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    name: userProfile?.name || '',\r\n    email: userProfile?.email || '',\r\n    phone: userProfile?.phone || '',\r\n    address: userProfile?.address || ''\r\n  });\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className=\"container\">\r\n          <div className={styles.notAuthenticated}>\r\n            <i className=\"fas fa-user-slash\" aria-hidden=\"true\"></i>\r\n            <h2>Please log in to view your profile</h2>\r\n            <p>You need to be logged in to access your account information.</p>\r\n            <button className=\"btn\" onClick={() => onNavigate('products')}>\r\n              Continue Shopping\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    }));\r\n  };\r\n\r\n  const handleSaveProfile = async (e) => {\r\n    e.preventDefault();\r\n    await updateProfile(formData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handlePreferenceChange = (key, value) => {\r\n    updatePreferences({ [key]: value });\r\n  };\r\n\r\n  const tabs = [\r\n    { id: 'profile', label: 'Profile', icon: 'fas fa-user' },\r\n    { id: 'orders', label: 'Order History', icon: 'fas fa-history' },\r\n    { id: 'addresses', label: 'Saved Addresses', icon: 'fas fa-map-marker-alt' },\r\n    { id: 'wishlist', label: 'Wishlist', icon: 'fas fa-heart' },\r\n    { id: 'preferences', label: 'Preferences', icon: 'fas fa-cog' }\r\n  ];\r\n\r\n  const renderTabContent = () => {\r\n    switch (activeTab) {\r\n      case 'profile':\r\n        return (\r\n          <div className={styles.tabContent}>\r\n            <div className={styles.profileHeader}>\r\n              <img\r\n                src={user.picture || '/images/default-avatar.png'}\r\n                alt={user.name}\r\n                className={styles.profileAvatar}\r\n              />\r\n              <div>\r\n                <h3>{user.name}</h3>\r\n                <p>Member since {new Date(userProfile?.createdAt).toLocaleDateString()}</p>\r\n              </div>\r\n              {!isEditing && (\r\n                <button\r\n                  className=\"btn btn--secondary\"\r\n                  onClick={() => setIsEditing(true)}\r\n                >\r\n                  Edit Profile\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            {isEditing ? (\r\n              <form onSubmit={handleSaveProfile} className={styles.profileForm}>\r\n                <div className={styles.formGroup}>\r\n                  <label htmlFor=\"name\" className={styles.formLabel}>\r\n                    Full Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleInputChange}\r\n                    className={styles.formInput}\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles.formGroup}>\r\n                  <label htmlFor=\"email\" className={styles.formLabel}>\r\n                    Email Address\r\n                  </label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleInputChange}\r\n                    className={styles.formInput}\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles.formGroup}>\r\n                  <label htmlFor=\"phone\" className={styles.formLabel}>\r\n                    Phone Number\r\n                  </label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    value={formData.phone}\r\n                    onChange={handleInputChange}\r\n                    className={styles.formInput}\r\n                  />\r\n                </div>\r\n\r\n                <div className={styles.formActions}>\r\n                  <button type=\"submit\" className=\"btn\">\r\n                    Save Changes\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn--secondary\"\r\n                    onClick={() => setIsEditing(false)}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            ) : (\r\n              <div className={styles.profileInfo}>\r\n                <div className={styles.infoItem}>\r\n                  <strong>Email:</strong> {user.email}\r\n                </div>\r\n                <div className={styles.infoItem}>\r\n                  <strong>Phone:</strong> {userProfile?.phone || 'Not provided'}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case 'preferences':\r\n        return (\r\n          <div className={styles.tabContent}>\r\n            <h3>Notification Preferences</h3>\r\n            <div className={styles.preferenceItem}>\r\n              <label className={styles.preferenceLabel}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={userPreferences.newsletter}\r\n                  onChange={(e) => handlePreferenceChange('newsletter', e.target.checked)}\r\n                />\r\n                <span>Receive plant care tips and newsletter</span>\r\n              </label>\r\n            </div>\r\n            <div className={styles.preferenceItem}>\r\n              <label className={styles.preferenceLabel}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={userPreferences.notifications}\r\n                  onChange={(e) => handlePreferenceChange('notifications', e.target.checked)}\r\n                />\r\n                <span>Order and shipping notifications</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'orders':\r\n        return (\r\n          <div className={styles.tabContent}>\r\n            <h3>Order History</h3>\r\n            <div className={styles.emptyState}>\r\n              <i className=\"fas fa-shopping-bag\" aria-hidden=\"true\"></i>\r\n              <p>No orders yet</p>\r\n              <button \r\n                className=\"btn\"\r\n                onClick={() => onNavigate('products')}\r\n              >\r\n                Start Shopping\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'addresses':\r\n        return (\r\n          <div className={styles.tabContent}>\r\n            <h3>Saved Addresses</h3>\r\n            <div className={styles.emptyState}>\r\n              <i className=\"fas fa-map-marker-alt\" aria-hidden=\"true\"></i>\r\n              <p>No saved addresses</p>\r\n              <p>Add addresses for faster checkout</p>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      case 'wishlist':\r\n        return (\r\n          <div className={styles.tabContent}>\r\n            <h3>Your Wishlist</h3>\r\n            <div className={styles.emptyState}>\r\n              <i className=\"fas fa-heart\" aria-hidden=\"true\"></i>\r\n              <p>Your wishlist is empty</p>\r\n              <p>Save your favorite plants for later</p>\r\n              <button \r\n                className=\"btn\"\r\n                onClick={() => onNavigate('products')}\r\n              >\r\n                Browse Plants\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className=\"container\">\r\n        <div className={styles.profileLayout}>\r\n          <aside className={styles.sidebar}>\r\n            <nav className={styles.sidebarNav}>\r\n              {tabs.map(tab => (\r\n                <button\r\n                  key={tab.id}\r\n                  className={`${styles.sidebarItem} ${activeTab === tab.id ? styles.active : ''}`}\r\n                  onClick={() => setActiveTab(tab.id)}\r\n                >\r\n                  <i className={tab.icon} aria-hidden=\"true\"></i>\r\n                  {tab.label}\r\n                </button>\r\n              ))}\r\n              <hr className={styles.sidebarDivider} />\r\n              <button\r\n                className={`${styles.sidebarItem} ${styles.logoutButton}`}\r\n                onClick={logout}\r\n              >\r\n                <i className=\"fas fa-sign-out-alt\" aria-hidden=\"true\"></i>\r\n                Logout\r\n              </button>\r\n            </nav>\r\n          </aside>\r\n\r\n          <main className={styles.mainContent}>\r\n            {renderTabContent()}\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  onNavigate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Profile;"],"names":["_ref","onNavigate","user","userProfile","userPreferences","updateProfile","updatePreferences","logout","useAuth","activeTab","setActiveTab","useState","isEditing","setIsEditing","formData","setFormData","name","email","phone","address","_jsx","className","styles","children","_jsxs","onClick","handleInputChange","e","value","type","checked","target","prev","_objectSpread","handleSaveProfile","async","preventDefault","handlePreferenceChange","key","id","label","icon","map","tab","concat","renderTabContent","src","picture","alt","Date","createdAt","toLocaleDateString","onSubmit","htmlFor","onChange","newsletter","notifications"],"sourceRoot":""}